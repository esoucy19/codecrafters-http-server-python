from __future__ import annotations

import socket
from typing import Final, Protocol, Self

HOST: Final[str] = "localhost"
PORT: Final[int] = 4221
BUFFER_SIZE: Final[int] = 1024


class Socket(Protocol):
    def __enter__(self) -> Socket: ...
    def __exit__(self, *args) -> None: ...
    def bind(self, host: str, port: int) -> None: ...
    def listen(self, backlog: int = ...) -> None: ...
    def accept(self) -> tuple[Socket, str]: ...
    def recv(self, bufsize: int, flags: int = ...) -> bytes: ...
    def sendall(self, data: bytes, flags: int = ...) -> None: ...


class Server(Protocol):
    def __enter__(self) -> Self: ...
    def __exit__(self, *args) -> None: ...
    def listen(self, max_connections: int = 0) -> None: ...
